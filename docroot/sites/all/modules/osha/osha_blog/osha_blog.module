<?php
/**
 * @file
 * Code for the Blog feature.
 */

include_once 'osha_blog.features.inc';

define('OSHA_BLOG_CONTENT_TYPE_BLOG', 'blog');

/**
 * Implements hook_post_features_enable_feature().
 *
 * {@inheritdoc}
 * @codeCoverageIgnore
 */
function osha_blog_post_features_enable_feature($component) {
  // After the field_instance ...
  if ($component == 'variable') {
    menu_rebuild();
    drupal_static_reset();
    if ($role = user_role_load_by_name('administrator')) {
      $permissions = array(
        'create blog content',
        'edit own blog content',
        'edit any blog content',
        'delete own blog content',
        'delete any blog content',
      );
      user_role_grant_permissions($role->rid, $permissions);
    }
  }
}

/**
 * Implements hook_post_features_revert().
 *
 * {@inheritdoc}
 * @codeCoverageIgnore
 */
function osha_blog_post_features_revert($component){
  // Add recaptcha validation for blog comment form.
  $query = db_query("SELECT * FROM captcha_points WHERE form_id = 'comment_node_blog_form' ")->fetchField();

  $data = array(
    'form_id' => 'comment_node_blog_form',
    'module' => 'image_captcha',
    'captcha_type' => 'Image',
  );
  if ($query) {
    drupal_write_record('captcha_points', $data, 'form_id');
  }
  else {
    drupal_write_record('captcha_points', $data);
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * {@inheritdoc}
 */
function osha_blog_views_pre_render(&$view) {
  if ($view->name == 'blog' && $view->current_display == 'block_2') {
    $month = '';
    $current_year = date('Y', time());

    foreach ($view->result as $key => $result) {
      $row_month = date('F', strtotime($result->field_field_publication_date[0]['raw']['value']));
      $row_month_raw = date('m', strtotime($result->field_field_publication_date[0]['raw']['value']));
      $row_year = date('Y', strtotime($result->field_field_publication_date_1[0]['raw']['value']));

      // Remove current year.
      if ($current_year == $row_year) {
        unset($result->field_field_publication_date_1[0]);
      }

      // Remove from display if publication date is in the same month.
      if ($month == $row_month) {
        unset($view->result[$key]);
        continue;
      }

      $month = $row_month;
      $result->field_field_publication_date[0]['rendered']['#markup']
        = "<a href='/blog/{$row_year}-{$row_month_raw}'>$row_month</a>";
    }
  }

  // Breadcrumb and title for Montly Posts.
  if ($view->name == 'blog' && $view->current_display == 'page_1') {
    $title = isset($view->args[0]) ? osha_blog_get_view_title($view->args[0]) : '';
    // Set view title.
    $view->build_info['title'] = $title;
    // Set view breadcrumb.
    drupal_set_breadcrumb(
      array(
        l(t('Home'), 'tools-and-publications/blog'),
        $title,
      )
    );
  }

  // Breadcrumb and title for Tags Posts.
  if ($view->name == 'blog' && $view->current_display == 'page_2') {
    $title = '';
    if (isset($view->args[0])) {
      $term = taxonomy_term_load($view->args[0]);
      $title = $term ? $term->name : '';
    }

    // Set view title.
    $view->build_info['title'] = $title;
    // Set view breadcrumb.
    drupal_set_breadcrumb(
      array(
        l(t('Home'), 'tools-and-publications/blog'),
        $title,
      )
    );
  }
}

/**
 * Implements hook_node_view_alter().
 *
 * Set custom breadcrumb
 * {@inheritdoc}
 */
function osha_blog_node_view_alter(&$build) {
  $breadcrumb = array();
  $node = $build['#node'];
  if ($build['#view_mode'] == 'full' && $node->type == 'blog') {
    $date = strtotime($node->field_publication_date[LANGUAGE_NONE][0]['value']);
    $breadcrumb[] = l(t('Home'), 'tools-and-publications/blog');
    $breadcrumb[] = l(date('F Y', $date), 'blog/' . date('Y-m', $date));
    $breadcrumb[] = drupal_get_title();
    drupal_set_breadcrumb($breadcrumb);
  }
}

/**
 * Implements hook_node_view().
 *
 * {@inheritdoc}
 */
function osha_blog_node_view($node, $view_mode, $langcode) {
  // Hide title for intro article Blog.
  if ($node->type == 'article' && $node->path['alias'] == 'tools-and-publications/blog') {
    hide($node->content['title_field']);
    drupal_set_breadcrumb(array(
      'EU-OSHA Blog'
    ));
  }
}

/**
 * Implements hook_process_field().
 *
 * {@inheritdoc}
 */
function osha_blog_process_field(&$vars) {
  if ($vars['element']['#field_name'] == 'field_tags' && $vars['element']['#bundle'] == 'blog') {
    foreach ($vars['element']['#object']->field_tags[LANGUAGE_NONE] as $key => $item) {
      $vars['items'][$key]['#markup']
        = '<a href="/blog/tag/' . $item['tid'] . '">' . $vars['items'][$key]['#markup'] . '</a>';
    }
  }
}

/**
 * Implements hook_workbench_access_node_element_alter().
 *
 * {@inheritdoc}
 */
function osha_blog_workbench_access_node_element_alter(&$element, $form_state, $active) {
  if (isset($form_state['build_info']['form_id']) && $form_state['build_info']['form_id'] == 'blog_node_form') {
    $element['#required'] = FALSE;
    foreach ($element['#options'] as $key => $option) {
      if (preg_match('/^[-\\s]*Blog/', $option)) {
        $element['#default_value'] = $key;
        break;
      }
    }
  }
}

/**
 * Display custom title for monthly views.
 *
 * @return bool|null|string
 *   View's title.
 */
function osha_blog_get_view_title($title) {
  if (preg_match('/([\d]{4}\-[\d]{2})/', $title)) {
    $title = date(
      'F Y',
      mktime(0, 0, 0, substr($title, 5, 2), 1, substr($title, 0, 4))
    );
    $title = t('@data posts', array('@data' => $title));
  }
  return $title;
}

/**
 * Implements hook_form_FORM_ID_alter
 *
 * {@inheritdoc}
 */
function osha_blog_form_comment_node_blog_form_alter(&$form, &$form_state) {
  // Change Author title name
  $form['author']['_author']['#title'] = t('Name');
  $form['author']['name']['#title'] = t('Name');
  $form['author']['name']['#required'] = FALSE;

  // Remove mail field from comment form
  $form['author']['mail']['#default_value'] = FALSE;
  $form['author']['mail']['#access'] = FALSE;
}

