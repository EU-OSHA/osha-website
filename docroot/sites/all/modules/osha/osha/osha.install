<?php

/**
 * Implements hook_install().
 */
function osha_install() {
  osha_configure_date_settings();
  osha_configure_language_detection();
  osha_replace_title_field();
  osha_configure_basic_page();
  osha_configure_tags_taxonomy();
  osha_enable_field_image_translations();
}

function osha_enable() {
  // Allow public to download file_entity files.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('download any document files'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('download any document files'));


  osha_configure_imce();
}

/**
 * Configure IMCE module - Alter User-1 profile & assign to administrator.
 */
function osha_configure_imce() {
  drupal_set_message('Configuring Drupal IMCE module ...');
  // /admin/config/media/imce
  if (!module_load_include('inc', 'imce', 'inc/imce.admin')) {
    throw new Exception('Cannot load inc/imce.admin.inc');
  }

  // Alter profile User-1.
  $profiles = variable_get('imce_profiles', array());

  if (isset($profiles[1])) {
    $profiles[1]['directories'][0]['name'] = ".";
    $profiles[1]['directories'][0]['subnav'] = "1";
    variable_set('imce_profiles', $profiles);
  }
  else {
    throw new Exception('Cannot load IMCE profile User-1.');
  }

  $roles = user_roles();

  if (in_array("administrator", $roles)) {
    // Role administrator found - assign User-1 profile to administrator.
    $roles_profiles = variable_get('imce_roles_profiles', array());
    $admin_role = user_role_load_by_name("administrator");

    $roles_profiles[$admin_role->rid]['public_pid'] = 1;
    $roles_profiles[$admin_role->rid]['private_pid'] = 1;
    $roles_profiles[$admin_role->rid]['weight'] = 0;

    variable_set('imce_roles_profiles', $roles_profiles);
  }
  else {
    // Role administrator not found.
    throw new Exception('Cannot assign IMCE profile User-1 to administrator - role administrator not found.');
  }
}

/**
 * Update date formats/timezone settings. Update search index configuration.
 */
function osha_update_7001() {
  osha_configure_date_settings();

  if ($index = search_api_index_load('default_multilingual_node_index')) {
    $index->options['data_alter_callbacks']['search_api_alter_node_status']['status'] = 1;
    $index->save();
    $index->reindex();
    drupal_set_message('The indexing workflow was successfully edited. All content was scheduled for re-indexing so the new settings can take effect.');
  }
}

/**
 * Remove the admin_views_node view.
 *
 * Configure jquery_update and responsive_menus
 * uuid features remove configuration.
 */
function osha_update_7002() {
  if ($view = views_get_view('admin_views_node')) {
    views_delete_view($view);
  }

  // Config jquery_update.
  variable_set('jquery_update_jquery_version', '1.10');

  // Config responsive_menus.
  variable_set('responsive_menus_no_jquery_update', array('1' => 0));
  variable_set('responsive_menus_ignore_admin', array('1' => 1));
  variable_set('responsive_menus_style', 'mean_menu');
  variable_set('responsive_menus_mean_menu_css_selectors', '#block-menu-block-1');
  variable_set('responsive_menus_mean_menu_container', 'body');
  variable_set('responsive_menus_mean_menu_trigger_txt', '<span /><span /><span />');
  variable_set('responsive_menus_mean_menu_close_txt', 'X');
  variable_set('responsive_menus_mean_menu_close_size', '18px');
  variable_set('responsive_menus_mean_menu_position', 'right');
  variable_set('responsive_menus_mean_menu_media_size', '960');
  variable_set('responsive_menus_mean_menu_show_children', 1);
  variable_set('responsive_menus_mean_menu_expand_txt', '+');
  variable_set('responsive_menus_mean_menu_contract_txt', '-');
  variable_set('responsive_menus_mean_menu_remove_attrs', 1);

  // Unset the settings for uuid_features to prevent heavy rendering
  // on features create/recreate.
  variable_set('uuid_features_entity_taxonomy_term', NULL);
  variable_set('uuid_features_entity_node', NULL);
  variable_set('uuid_features_entity_file', NULL);
  variable_set('uuid_features_file_file', NULL);
  variable_set('uuid_features_file_mode', NULL);
  variable_set('uuid_features_file_node', NULL);
}

/**
 * Activate module view_datasource and feature-revert the views.
 */
function osha_update_7003() {
  module_enable(array('views_json'));
  features_revert(array('osha' => 'views_view'));
  cache_clear_all();
}

/**
 * Removes redirects that are also aliases.
 */
function osha_update_7004() {
  $query = db_select('redirect', 'r');
  $query->join('url_alias', 'a', 'r.source=a.alias');
  $query->fields('r', array('rid'));
  $rids = $query->execute()
    ->fetchCol();

  db_delete('redirect')
    ->condition('rid', $rids, 'IN')
    ->execute();
}

/**
 * Give all permissions to administrators.
 */
function osha_update_7005() {
  $role = user_role_load(3);
  user_role_grant_permissions($role->rid, array_keys(module_invoke_all('permission')));
}

/**
 * Add menu position rule for articles on inside-eu-osha/governance-eu-osha/internal_documents
 */
function osha_update_7006() {
  if (module_exists('osha') && module_load_include('inc', 'osha', 'osha.utils')) {
    $parent_menu = array('-------- Request of internal documents');
    $condition = array('pages' => 'inside-eu-osha/governance-eu-osha/internal_documents/*');
    osha_add_menu_position_rule('Governance Internal Documents Rule', $parent_menu, $condition);
  }
}

/**
 * Enable extra languages: Albanian, Serbian, Russian, Turkish, Macedonian
 * and Bosnian.
 */
function osha_update_7007() {
  $languages = language_list();
  $add = array('sq', 'bs', 'sr', 'mk');
  foreach ($add as $lang) {
    if (!isset($languages[$lang])) {
      locale_add_language($lang);
    }
  }
  db_update('languages')
    ->fields(array(
      'weight' => 10,
    ))
    ->condition('language', $add, 'IN')
    ->execute();
  // Enable Russian and Turkish.
  db_update('languages')
    ->fields(array(
      'enabled' => 1,
    ))
    ->condition('language', array('ru', 'tr'), 'IN')
    ->execute();
}

/**
 * Give display permissions - for cookie privacy module.
 */
function osha_update_7008() {
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('display EU Cookie Compliance popup'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('display EU Cookie Compliance popup'));
}

/**
 * Enable extra languages: Serbo-Croatian.
 */
function osha_update_7009() {
  $languages = language_list();
  $add = array('sh');
  foreach ($add as $lang) {
    if (!isset($languages[$lang])) {
      locale_add_language($lang);
    }
  }
  db_update('languages')
    ->fields(array(
      'weight' => 10,
    ))
    ->condition('language', $add, 'IN')
    ->execute();
}

/**
 * Add all EU cookies strings into translation management workflow
 */
function osha_update_7010() {
  locale('<p><span style="font-size: small;"><strong>The EU-OSHA website uses cookies to gather information necessary for browsing the website, in accordance with the EU-OSHA privacy notice.</strong></span></p><p>By clicking on any link in the EU-OSHA web pages you are giving your consent for the use of cookies.</p>');
  locale('OK, I agree');
  locale('No, give me more info');
  locale('More info');
  locale('<h2>Thank you for accepting cookies</h2><p>You can now hide this message or find out more about cookies.</p>');
}

/**
 * Update aliases that have special punctuation chars.
 */
function osha_update_7011() {
  $chars = array('“', '„', '´', '‘', '«', '»');
  foreach ($chars as $char) {
    $aliases = db_select('url_alias', 'u')
      ->fields('u')
      ->condition('alias', '%' . db_like($char) . '%', 'LIKE')
      ->execute()
      ->fetchAllAssoc('pid');
    foreach ($aliases as $pid => $alias) {
      db_update('url_alias')
        ->condition('pid', $pid)
        ->fields(array(
          'alias' => str_replace($char, '-', $alias->alias)
        ))
        ->execute();
    }
  }
}

/**
 * CW-1690: Update all aliases from inside-eu-osha to about-eu-osha
 */
function osha_update_7012() {
  $aliases = db_select('url_alias', 'u')
    ->fields('u', array('source', 'alias'))
    ->distinct()
    ->condition('alias', 'inside-eu-osha%', 'LIKE')
    //->condition('source', 'node/8468')
    ->execute()
    ->fetchAll();

  foreach ($aliases as $row) {
    //print 'about'.substr($row->alias, 6)."\n";
    db_update('url_alias')
    ->condition('source', $row->source)
    ->condition('alias', $row->alias)
    ->fields(array(
      'alias' => 'about'.substr($row->alias, 6)
    ))
    ->execute();

    osha_create_redirect($row->alias, $row->source);
  }
  // add redirect for some views
  osha_create_redirect('inside-eu-osha/press-room', 'about-eu-osha/press-room');
  osha_create_redirect('inside-eu-osha/press-releases', 'about-eu-osha/press-releases');

  db_update('menu_links')
    ->condition('link_path', 'inside-eu-osha/press-room')
    ->fields(array(
      'link_path' => 'about-eu-osha/press-room',
      'router_path' => 'about-eu-osha/press-room',
    ))
    ->execute();
}

/**
 * Fixed broken translations for careers quicktabs.
 */
function osha_update_7013() {
  db_query("update locales_source set location = 'quicktabs:tab:_careers_accordion-0:title', context='tab:_careers_accordion-0:title' where lid = 9240");
  db_query("update locales_source set location = 'quicktabs:tab:_careers_accordion-1:title', context='tab:_careers_accordion-1:title' where lid = 9241");
  db_query("update locales_source set location = 'quicktabs:tab:_careers_accordion-2:title', context='tab:_careers_accordion-2:title' where lid = 9242");
  db_query("update locales_source set location = 'quicktabs:tab:_careers_accordion-3:title', context='tab:_careers_accordion-3:title' where lid = 9245");
  db_query("update locales_source set location = 'quicktabs:tab:_careers_accordion-4:title', context='tab:_careers_accordion-4:title' where lid = 9680");
  db_query("update locales_source set location = 'quicktabs:tab:_careers_accordion-5:title', context='tab:_careers_accordion-5:title' where lid = 9681");
  db_query("update i18n_string set context='tab:_careers_accordion-3:title', objectid='_careers_accordion-3' WHERE lid=9245");
  db_query("update i18n_string set context='tab:_careers_accordion-4:title', objectid='_careers_accordion-4' WHERE lid=9680");
  db_query("update i18n_string set context='tab:_careers_accordion-5:title', objectid='_careers_accordion-5' WHERE lid=9681");
  db_query("delete from i18n_string where lid in (9243, 9244)");
  db_query("delete from locales_target where lid in (9243, 9244)");
  db_query("delete from locales_source where lid in (9243, 9244)");
}


/**
 * Set replace with separator for some punctuation in aliases.
 */
function osha_update_7014() {
  variable_set('pathauto_punctuation_hyphen', 1);
  variable_set('pathauto_punctuation_plus', 1);
  variable_set('pathauto_punctuation_underscore', 1);
  variable_set('pathauto_punctuation_equal', 1);
  variable_set('pathauto_punctuation_8249', 1);
  variable_set('pathauto_punctuation_8250', 1);
  variable_set('pathauto_punctuation_0171', 1);
  variable_set('pathauto_punctuation_0187', 1);
  variable_set('pathauto_punctuation_en-dash', 1);
  variable_set('pathauto_punctuation_em-dash', 1);
  variable_set('pathauto_punctuation_overline', 1);
}

/**
 * MC-150 Create link to Flickr in footer-menu.
 */
function osha_update_7015() {
  $blog_link = menu_link_load(1719);
  $blog_link['weight'] = 6;
  menu_link_save($blog_link);

  $image = file_get_contents('sites/all/themes/osha_frontend/images/footer-flickr.png');
  $file = file_save_data($image, 'public://menuimage/footer-flickr.png', FILE_EXISTS_REPLACE);

  $item = array(
    'link_path' => 'https://www.flickr.com/photos/euosha/albums',
    'link_title' => 'EU OSHA Flickr photos',
    'menu_name' => 'menu-footer-menu',
    'weight' => 5,
    'expanded' => 0,
    'plid' => 1701, // set parent - "Social"
    'options' => array(
      'attributes' => array(
        'title' => 'EU OSHA Flickr photos',
        'content' => array(
          'image' => 'public://menuimage/footer-flickr.png',
        ),
      ),
      'content' => array(
        'image' => 'public://menuimage/footer-flickr.png',
      ),
    ),
  );
  menu_link_save($item);
}

/**
 * Revert osha module.
 */
function osha_update_7016() {
  features_revert_module('osha');
}

/**
 * Enable osha_unpublish.
 */
function osha_update_7017() {
  module_enable(array('osha_unpublish'));
  // Set default variables for unpublishing content.
//  variable_set('osha_unpublish_news', 6);
//  variable_set('osha_unpublish_events', 6);
//  variable_set('osha_unpublish_highlight', 12);
//  variable_set('osha_unpublish_press_release', 24);
}

/**
 * Set default intervals for unpublish
 */
function osha_update_7018() {
  // Set default variables for unpublishing content.
  variable_set('osha_unpublish_node_news', 6);
  variable_set('osha_unpublish_node_events', 6);
  variable_set('osha_unpublish_node_highlight', 12);
  variable_set('osha_unpublish_node_press_release', 24);
  variable_set('osha_unpublish_entity_collection_newsletter_content_collection', 12);
}

/**
 * Disable add to any and enable shorten url.
 */
function osha_update_7019() {
  module_enable(array('shorten'));
  module_disable(array('addtoany'));
}


/**
 * MDR-822: Publication date filter
 */
function osha_update_7020() {
  features_revert_module('osha');
}

function osha_update_7021() {
  module_enable(['manualcrop']);
  features_revert_module('osha');
  features_revert_module('osha_homepage');
  features_revert_module('osha_blog');
  features_revert_module('osha_dangerous_substances');
  features_revert_module('osha_highlight');
  features_revert_module('osha_infographics');
  features_revert_module('osha_news');
  features_revert_module('osha_press_release');
}

function osha_update_7022() {
  module_enable(['osha_sites_migration']);
  features_revert_module('osha_sites_migration');
  features_revert_module('osha_news');
  features_revert_module('osha_events');
  variable_set('hwc_migration_HWCEvents_url', '/ncw-export/events');
  variable_set('hwc_migration_HWCNews_url', '/ncw-export/news');
  variable_set('hwc_migration_root_url', 'https://healthy-workplaces.eu');
  migrate_autoregister();
}

/**
 * VES-15: Taxonomy changed module, feature revert.
 */
function osha_update_7023() {
  module_enable(['taxonomy_changed']);
  features_revert_module('osha');
}

/**
 * Feature revert: NOW-449 - SEO: Links from the CW to the root URL.
 */
function osha_update_7024() {
  features_revert_module('osha');
}


/**
 * Install and configure no_autocomplete module: MDR-1001 - Password type input with auto-complete enabled.
 */
function osha_update_7025() {
  module_enable(['no_autocomplete']);
  variable_set('no_autocomplete_login_form', 1);
}

/**
 * Enable csrf_checks module.
 */
function osha_update_7026() {
  module_enable(['csrf_checks']);
}

/**
 * Enable export dangerous_substances nodes view
 */
function osha_update_7027() {
  features_revert_module('osha');
}
/**
 * Features revert: MDR-1289.
 */
function osha_update_7028() {
  features_revert_module('osha_infographics');
  features_revert_module('osha_blocks');
  features_revert_module('osha');
}

/**
 * enable module: MDR-1229 Could Flickr albums
 */
function osha_update_7029() {
  module_enable(['osha_flickr']);
}

/**
 * MDR-1451 I3-Remove the multiple options for formatting the text
 */
function osha_update_7030() {
  features_revert_module('osha');
}

/**
 * MDR-1450 I2-Introduce hint text inside the input fields
 */
function osha_update_7031() {
  features_revert(array('osha' => array('field_base', 'field_instance')));
}

/**
 * MDR-1452 I4-Provide to the user a preview of the image
 */
function osha_update_7032() {
  features_revert_module('osha');
  features_revert_module('osha_dangerous_substances');
  features_revert_module('osha_infographics');
}

/**
 * MDR-1452 I4-Provide to the user a preview of the image - UPDATE
 */
function osha_update_7033() {
  features_revert_module('osha');
}

/**
 * MDR-1452 I4-Provide to the user a preview of the image - UPDATE
 */
function osha_update_7034() {
  features_revert(array('osha' => array('field_base', 'field_instance')));
}

/**
 * Gallery in type filter.
 */
function osha_update_7035() {
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-1440 Possibility to tag an album as "HWC 18-19" and display also in HWC18-19 website.
 */
function osha_update_7036() {
  $name = 'HWC 18-19';
  $term = taxonomy_get_term_by_name($name, 'tags');
  if (empty($term)) {
    $voc = taxonomy_vocabulary_machine_name_load('tags');
    $term = new stdClass();
    $term->parent = 0;
    $term->language = 'en';
    $term->name = $name;
    $term->vid = $voc->vid;
    $term->field_tags_code[LANGUAGE_NONE][]['value'] = 'hwc_18_19';
    taxonomy_term_save($term);
  }
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-1480 content checking by PMs - notifications and workflow.
 */
function osha_update_7037() {
  features_revert(array('osha' => array('user_permission', 'variable')));
}

/**
 * MDR-1440 HWC18: Possibility to tag an album as "HWC 18-19" and display also in HWC18-19 website.
 */
function osha_update_7038() {
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-1670 permissions problem in the legislation section.
 */
function osha_update_7039() {
  features_revert(array('osha' => array('user_permission')));
}

/**
 * HW18-460 less entries in DS DB in the campaign than in the corporate.
 */
function osha_update_7040() {
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-1511 Cannot find the images added from the editor in the body text.
 */
function osha_update_7041() {
  variable_set('imce_custom_scan', 'osha_imce_scan_directory');
  variable_set('imce_custom_content', array('osha_imce_custom_content' => TRUE));
  features_revert(array('osha' => array('wysiwyg')));
}

/**
 * MDR-1764 add custom dimensions to the piwik script.
 */
function osha_update_7042() {
  variable_set('osha_menu_level_reverse', FALSE);
}

/**
 * MDR-1905 Development MSDs database like the DS one.
 */
function osha_update_7043() {
  module_enable(['osha_musculoskeletal_disorders']);
  features_revert(array('osha_search' => array('fe_block_settings')));
  features_revert_module('osha_musculoskeletal_disorders');
  osha_musculoskeletal_disorders_add_terms();
}

/**
 * MDR-2009 Back end - Events field - Tagging functionality.
 */
function osha_update_7044() {
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-2093 NCW: add pictures copyright.
 */
function osha_update_7045() {
  features_revert(array('osha' => array('field_instance')));
}

/**
 * MDR-2257 NCW: Matomo script to overwrite the language for the URLs.
 */
function osha_update_7046() {
  variable_set('piwik_translation_set', 1);
  variable_set('piwik_query_parameters', 1);
}

/**
 * MDR-2335 Could broken links in a page be highlighted when in view mode.
 */
function osha_update_7047() {
  features_revert(array('osha' => array('wysiwyg')));
}

/**
 * MDR-2422 A counter of published web items.
 */
function osha_update_7048() {
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-2614 MSDs database entry form comments.
 */
function osha_update_7049() {
  if ($role = user_role_load_by_name('Dangerous substances')) {
    $role->name = 'OSH DB editor';
    user_role_save($role);
  }
}

/**
 * MDR-2694 Remove the arrows in the Anniversary articles and add 'view all'.
 */
function osha_update_7050() {
  features_revert(array('osha' => array('field_instance')));
  features_revert(array('osha' => array('views_view')));
}

/**
 * MDR-2500 New process for the OSH Mail subscribers.
 */
function osha_update_7051() {
  variable_set('osha_newsletter_listserv', 'crm-oshmail@osha.europa.eu');
  variable_set('osha_newsletter_list_name', 'crm-oshmail');
}

/**
 * MDR-2786 NCW - Revamp - Home page development.
 */
function osha_update_7052() {
  features_revert(array('osha' => array('fe_block_settings')));
}

/**
 * Revamp publication path alias update.
 */
function osha_update_7053() {
  variable_set('pathauto_node_publication_pattern', 'publications/[node:title]');
}

/**
 * MDR-3061 update permissions and ldap groups.
 */
function osha_update_7054() {
  $map = [
    'LEGIS'=>[
      2,
      11,
      2544,
      2425,
      6,
      13497,
    ],
    'AWARDS'=>[
      4,
    ],
    'FILMAW'=>[
      13370,
      13370,
      10423,
      9412,
      5846,
      7668,
      7667,
      7666,
      7669,
      7665,
      892,
      877,
    ],
    'DVTS'=>[
      13822,
    ],
    'NAPO'=>[
      1464,
    ],
  ];
  $names = [
    'LEGIS' =>'Site: Legislation',
    'AWARDS' => 'Site: Awards',
    'FILMAW' => 'Site: Film awards',
    'DVTS' => 'Site: Datavisualisation',
    'NAPO' => 'Site: Napo',
  ];
  $voc = taxonomy_vocabulary_machine_name_load('section');
  foreach ($map as $section_code => $nids) {
    $name = $names[$section_code];
    $term = osha_workflow_get_section_term_by_ldap_id($section_code);
    if (empty($term)) {
      $term = new stdClass();
      $term->parent = 0;
      $term->language = 'en';
      $term->name = $name;
      $term->vid = $voc->vid;
      $term->field_ldap_section_code[LANGUAGE_NONE][]['value'] = $section_code;
      taxonomy_term_save($term);
    }
    foreach ($nids as $nid) {
      $node = node_load($nid);
      if (empty($node->workbench_access[$term->tid])) {
        $node->workbench_access = [$term->tid=>$term->tid];
        node_save($node);
      }
    }
  }
}

/**
 * MDR-3214 Update urls according NCW revamp.
 */
function osha_update_7055() {
  $map = [
    'data-visualisation' => 'facts-and-figures/data-visualisation',
    'tools-and-publications/economics-occupational-safety-and-health-value-osh-society' => 'facts-and-figures/data-visualisation/economics-occupational-safety-and-health-value-osh-society',
    'tools-and-publications/interactive-dashboard' => 'facts-and-figures/data-visualisation/interactive-dashboard',
    'tools-and-publications/safer-and-healthier-work-any-age-data-visualisation-tool' => 'facts-and-figures/data-visualisation/safer-and-healthier-work-any-age-data-visualisation-tool',
    'surveys-and-statistics-osh/european-opinion-polls-safety-and-health-work/european-opinion-poll-occupational-safety-and-health-2013' => 'facts-and-figures/european-opinion-polls-safety-and-health-work/european-opinion-poll-occupational-safety-and-health-2013',
    'surveys-and-statistics-osh/european-opinion-polls-safety-and-health-work/european-opinion-poll-occupational-safety-and-health-2012' => 'facts-and-figures/european-opinion-polls-safety-and-health-work/european-opinion-poll-occupational-safety-and-health-2012',
    'surveys-and-statistics-osh/european-opinion-polls-safety-and-health-work/european-opinion-poll-occupational-safety-and-health-2009' => 'facts-and-figures/european-opinion-polls-safety-and-health-work/european-opinion-poll-occupational-safety-and-health-2009',

    'napo-safety-smile' => 'tools-and-resources/napo-safety-smile',
    'tools-and-publications/osh-campaign-toolkit' => 'tools-and-resources/osh-campaign-toolkit',
    'tools-and-publications/infographics' => 'tools-and-resources/infographics',

    'tools-and-publications/e-guide-managing-stress-and-psychosocial-risks' => 'tools-and-resources/e-guides/e-guide-managing-stress-and-psychosocial-risks',
    'tools-and-publications/e-guide-all-ages' => 'tools-and-resources/e-guides/e-guide-all-ages',
    'tools-and-publications/eu-e-guide-vehicle-safety-vesafe' => 'tools-and-resources/e-guides/eu-e-guide-vehicle-safety-vesafe',
    'themes/dangerous-substances/dangerous-substances-e-tool' => 'tools-and-resources/e-guides/dangerous-substances-e-tool',
    'e-guides' => 'tools-and-resources/e-guides',
    'tools-and-publications/oshwiki' => 'tools-and-resources/oshwiki',
    'tools-and-publications/oira' => 'tools-and-resources/oira',
    'osh-e-tools' => 'themes/osh-e-tools',
    'tools-and-publications/tools-osh-management' => 'themes/osh-e-tools',
    'tools-and-publications/seminars' => 'tools-and-resources/seminars',
    'oshevents/seminars' => 'tools-and-resources/seminars',
    'surveys-and-statistics-osh/esener' => 'facts-and-figures/esener',
  ];
  foreach($map as $old_alias => $new_alias) {
    $aliases = db_select('url_alias', 'u')
      ->fields('u', array('source', 'alias'))
      ->distinct()
      ->condition('alias', $old_alias)
      ->execute()
      ->fetchAll();

    if ($aliases) {
      foreach ($aliases as $row) {
        db_update('url_alias')
          ->condition('source', $row->source)
          ->condition('alias', $row->alias)
          ->fields(array(
            'alias' => $new_alias
          ))
          ->execute();
        osha_create_redirect($row->alias, $row->source);
      }
    }
  }
}

/**
 * MDR-3009 Development - Estimation to place the DS glossary in the Corporate website.
 */
function osha_update_7056() {
  module_enable(array('osha_glossary'));
}

/**
 * MDR-3637 add .blog to the list of domains.
 */
function osha_update_7057() {
  $link_extra_domains = variable_get('link_extra_domains', []);
  $link_extra_domains[] = 'blog';
  variable_set('link_extra_domains', $link_extra_domains);
  user_role_grant_permissions(3, array('administer link domains'));
}

/**
 * MDR-3433 Development - Automatise the page with the privacy statements.
 */
function osha_update_7058() {
  module_enable(array('osha_register_records'));
}

/**
 * MDR-3903 Sitemap translation for DE.
 */
function osha_update_7059() {
  $result = db_query("SELECT * FROM {locales_target} WHERE lid = :lid AND language = :language", array(':lid' => 20832, ':language' => 'de'));
  $record = (array)$result->fetch();
  $record['translation'] = 'Sitemap';
  drupal_write_record('locales_target', $record, ['lid', 'language']);
}

/**
 * MDR-3944 add "tags" taxonomy to the downloads report.
 */
function osha_update_7060() {
  features_revert(array('osha' => 'views_view'));
}

/**
 * MDR-3936 Wrong symbols in the tweets in OSHmail.
 */
function osha_update_7061() {
}

/**
 * MDR-3936 Wrong symbols in the tweets in OSHmail.
 */
function osha_update_7062() {
}

/**
 * MDR-3936 Wrong symbols in the tweets in OSHmail.
 */
function osha_update_7063() {

  $fid = 1;
  $feed = tweet_feed_get_feed_object($fid);
  if (empty($feed)) {
    return FALSE;
  }
  module_load_include('inc', 'tweet_feed', 'inc/twitter-oauth');
  $con = new TwitterOAuth($feed->consumer_key, $feed->consumer_secret, $feed->oauth_token, $feed->oauth_token_secret);
  $params = array('user_id' => $feed->timeline_id, 'count' => 120, 'tweet_mode' => 'extended');
  $params['include_rts'] = FALSE;
  $tdata = [];
  while (1) {
    $data = json_decode(
      $con->oAuthRequest(
        'https://api.twitter.com/1.1/statuses/user_timeline.json',
        'GET',
        $params
      )
    );
    if (!$data) {
      break;
    }
    foreach ($data as $row) {
      $tdata[$row->id_str] = $row;
    }
    $end_of_the_line = array_pop($tdata);
    array_push($tdata, $end_of_the_line);
    $lowest_id = $end_of_the_line->id_str;
    if ($lowest_id > 0) {
      $params['max_id'] = $lowest_id;
    }
  }
  $map_id_text = [];
  foreach($tdata as $data) {
    $id = $data->id_str;
    $tweet_html = tweet_feed_filter_iconv_text(
      tweet_feed_filter_smart_quotes(
        tweet_feed_format_output(
          $data->full_text, 1)
      )
    );
    $map_id_text[$id] = $tweet_html;
  }

  $map_tweet_id_nid = db_select('field_data_field_tweet_id', 'n')
    ->fields('n', array('field_tweet_id_value', 'entity_id'))
    ->execute()
    ->fetchAllKeyed(0, 1);

  foreach ($map_id_text as $id_str => $new_value) {
    $nid = $map_tweet_id_nid[$id_str];
    if (!$nid) {
      continue;
    }
    $node = node_load($nid);
    $new_value = $map_id_text[$node->field_tweet_id[LANGUAGE_NONE][0]['value']];
    $old_value = $node->field_tweet_contents[LANGUAGE_NONE][0]['value'];
    if ($old_value !== $new_value) {
      $node->field_tweet_contents[LANGUAGE_NONE][0]['value'] = $new_value;
      node_save($node);
    }
  }
}

/**
 * MDR-4029 MSDs database - "priority area" not in English.
 */
function osha_update_7064() {
}

/**
 * MDR-4029 MSDs database - "priority area" not in English.
 */
function osha_update_7065() {
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if (!$vocabulary->base_i18n_mode) {
      continue;
    }
    $tree = taxonomy_get_tree($vocabulary->vid, 0, NULL, TRUE);
    foreach ($tree as $term) {
      if (!property_exists($term, 'name_field')) {
        continue;
      }
      if (count($term->name_field) > 2) {
        if (($term->language != 'en') || ($term->name_original != $term->name_field['en'][0]['value'])) {
          $term->name_original = $term->name_field['en'][0]['value'];
          $term->language = 'en';
          taxonomy_term_save($term);
        }
      }
    }
  }
}

/**
 * MDR-4244 remove the old thesaurus.
 */
function osha_update_7066() {
  $instance = field_info_instance('node','field_thesaurus','article');
  field_delete_instance($instance);
  features_revert_module('osha');
}
/**
 * MDR-4244 remove the old thesaurus.
 */
function osha_update_7067() {
  $instance = field_info_instance('file','field_thesaurus','document');
  field_delete_instance($instance);
  $instance = field_info_instance('file','field_thesaurus','image');
  field_delete_instance($instance);
  features_revert_module('osha');
}
