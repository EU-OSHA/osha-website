<?php

/**
 * Implements hook_field_info().
 */
function osha_slideshare_field_info() {
  return array(
    'slideshare' => array(
      'label' => t('Slideshare URL'),
      'description' => t('This field add a slideshare link'),
      'default_widget' => 'slideshare_field',
      'default_formatter' => 'slideshare_default',
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function osha_slideshare_field_widget_info() {
  return array(
    'slideshare_field' => array(
      'label' => t('Slideshare'),
      'field types' => array('slideshare'),
    ),
  );
}

/**
 * Implements hook_field_settings_form().
 */
function osha_slideshare_field_settings_form($field, $instance, $has_data) {
  $settings = $field['settings'];
  // Add your global settings fields here
  $form['api_key'] = array(
    '#type' => 'textfield',
    '#title' => 'Slideshare API Key',
    '#default_value' => isset($settings['api_key'])? $settings['api_key']: '6WKMTITI'
  );

  $form['secret_key'] = array(
    '#type' => 'textfield',
    '#title' => 'Slideshare Secret Key',
    '#default_value' => isset($settings['secret_key'])? $settings['secret_key']: 'v1HYiYhg'
  );

  return $form;
}

/**
 * Implements hook_field_instance_settings_form().
 */
function osha_slideshare_field_instance_settings_form($field, $instance) {
  $settings = $instance['settings'];
  // Add your instance settings fields here.
  $form = array();
  return $form;
}

/**
 * Implements hook_field_widget_form().
 */
function osha_slideshare_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $element['slide_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Slideshare URL'),
    '#default_value' => isset($items[$delta]['slide_url']) ? $items[$delta]['slide_url'] : '',
    '#maxlength' => 256,
    '#required' => $element['#required'],
    '#description' => t('Enter the Slideshare URL. Valid URL format like: http://www.slideshare.net/euosha/hwc-esener'),
  );

  $element['slide_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Slideshare ID'),
    '#default_value' => isset($items[$delta]['slide_id']) ? $items[$delta]['slide_id'] : '',
    '#required' => $element['#required'],
    '#description' => t('Enter the Slideshare ID'),
  );

  return $element;
}

/**
 * Implements hook_field_presave().
 */
function osha_slideshare_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  foreach ($items as $delta => $item) {
    if (isset($item['slide_url'])) {
      //save slide thumbnail on disk
      saveThumbnail($field['settings']['api_key'], $field['settings']['secret_key'], $items[$delta]['slide_id']);
    }
  }
}

/**
 * Implements hook_field_validate().
 */
function osha_slideshare_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
  // Loop through field items in the case of multiple values.
  foreach ($items as $delta => $item) {
    if (isset($item['slide_url']) && $item['slide_url'] != '') {
      if (!valid_slide_url($item['slide_url'])) {
        $errors[$field['field_name']][$langcode][$delta][] = array(
          'error' => 'slide_url_invalid',
          'message' => t('Invalid Slideshare URL.'),
        );
      }
    }

    if (isset($item['slide_id']) && $item['slide_id'] != '') {
      if (!ctype_digit($item['slide_id'])) {
        $errors[$field['field_name']][$langcode][$delta][] = array(
          'error' => 'slide_id_invalid',
          'message' => t('Invalid Slideshare ID.'),
        );
      }
    }
  }
}

function valid_slide_url($url){
  $pattern = '/(http:\/\/)www\.slideshare\.net\/([\w\d\-_\/]+)/';

  if(valid_url($url) && preg_match($pattern, $url)){
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_is_empty().
 */
function osha_slideshare_field_is_empty($item, $field) {
  if(empty($item['slide_url']) || empty($item['slide_id'])){
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_formatter_info().
 */
function osha_slideshare_field_formatter_info() {
  return array(
    'slideshare_default' => array(
      'label' => t('Default'),
      'field types' => array('slideshare'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function osha_slideshare_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $wrapper = entity_metadata_wrapper('node', $entity);
  $thumbnails = $wrapper->field_slideshare_thumbnail->value();
  switch ($display['type']) {
    case 'slideshare_default' :
      foreach ($items as $delta => $item) {
        if (isset($item['slide_url'])) {
          $thumbnail = '';
          if ($thumbnails[$delta]) {
            $thumbnail = $thumbnails[$delta];
          }
          $element[$delta]['#markup'] =
            osha_slideshare_infos($item['slide_url'], $item['slide_id'], $thumbnail);
        }
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_theme
 */
function osha_slideshare_theme(){
  $theme = array();
  $path = drupal_get_path('module', 'osha_slideshare');

  $theme['slideshare_display'] = array(
    'template' => 'slideshare_display',
    'variables' => array(
      'path' => NULL,
      'src' => NULL,
    ),
    'path' => $path . '/templates',
  );

  return $theme;
}

/**
 * Save Slide Thumbnail
 */
function saveThumbnail($api_key, $secret_key, $slideshow_id) {
  $files = variable_get('file_public_path', conf_path() . '/files');
  $file_name = $slideshow_id . '.jpg';
  $dest = $files . '/slideshare/' . $file_name;

  if(!file_exists($dest)){
    $url = 'https://www.slideshare.net/api/2/get_slideshow';
    $ts = time();
    $hash = sha1($secret_key.$ts);
    $params = 'api_key='.$api_key.'&ts='.$ts.'&hash='.$hash.'&slideshow_id='.$slideshow_id;

    $url = $url.'?'.$params;

    $request = drupal_http_request($url);
    $xml = simplexml_load_string($request->data);

    //save image on disk
    if(!empty($xml->URL)){
      //remove first slashes (//cdn.slidesharecdn.com/ss_thumbnails/hwcesener-...)
      $thumbnail = substr($xml->ThumbnailURL, 2);
      $ch = curl_init($thumbnail);
      if($ch){
        $fp = fopen($dest, 'wb');
        curl_setopt($ch, CURLOPT_FILE, $fp);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
        curl_exec($ch);
        curl_close($ch);
        fclose($fp);
      }
    }
  }
}

/**
 * Connect to Slideshare and get information
 * about the URL provided
 */
function osha_slideshare_infos($slideshow_url, $slideshow_id, $thumbnail = '') {
  $files = variable_get('file_public_path', conf_path() . '/files');
  $file_name = $slideshow_id . '.jpg';
  $dest = $files . '/slideshare/' . $file_name;
  $image = '';
  if ($thumbnail) {
    $image = [
      'style_name' => 'publication_youtube',
      'path' => $thumbnail['uri'],
    ];
    $image = theme('image_style', $image);
  }
  elseif (file_exists($dest)) {
    $image = theme('image', array('path' => $dest));
  }
  return theme('slideshare_display',array(
    'path' => $slideshow_url,
    'image' => $image,
  ));
}

function save_slideshare_oembed($slideshare_id, $slideshare_url) {
  $files = variable_get('file_public_path', conf_path() . '/files');
  $file_name = $slideshare_id . '.json';
  $dest = $files . '/slideshare/' . $file_name;
  if (!file_exists($dest)) {
    $json = file_get_contents('https://www.slideshare.net/api/oembed/2?format=json&url=' . $slideshare_url);
    file_put_contents($dest, $json);
  }
}

function get_slideshare_oembed($slideshare_id, $slideshare_url, $thumbnail = '') {
  $files = variable_get('file_public_path', conf_path() . '/files');
  $file_name = $slideshare_id . '.json';
  $dest = $files . '/slideshare/' . $file_name;
  $json = [];
  if ($thumbnail) {
    $image = [
      'style_name' => 'publication_youtube',
      'path' => $thumbnail['uri'],
    ];
    $image = theme('image_style', $image);
  }
  elseif (!file_exists($dest)) {
    save_slideshare_oembed($slideshare_id, $slideshare_url);
  }
  if (file_exists($dest)) {
    $json = json_decode(file_get_contents($dest), TRUE);
  }
  return $json;
}

function get_slideshare_img($slideshare_id, $thumbnail = '') {
  $files = variable_get('file_public_path', conf_path() . '/files');
  $file_name = $slideshare_id . '.jpg';
  $dest = $files . '/slideshare/' . $file_name;
  $image = '';
  if ($thumbnail) {
    $image = [
      'style_name' => 'publication_youtube',
      'path' => $thumbnail['uri'],
    ];
    $image = theme('image_style', $image);
  }
  elseif (file_exists($dest)) {
    $image = theme('image', array('path' => $dest));
  }
  return $image;
}
